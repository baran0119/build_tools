diff --git a/include/utils/RefBase.h b/include/utils/RefBase.h
index 8e15c19..a45a829 100644
--- a/include/utils/RefBase.h
+++ b/include/utils/RefBase.h
@@ -53,6 +53,15 @@ inline bool operator _op_ (const U* o) const {                  \
 
 // ---------------------------------------------------------------------------
 
+/* START JB MR1 COMPAT */
+class ReferenceConverterBase {
+public:
+    virtual size_t getReferenceTypeSize() const = 0;
+    virtual void* getReferenceBase(void const*) const = 0;
+    inline virtual ~ReferenceConverterBase() { }
+};
+/* END JB MR1 COMPAT */
+
 class ReferenceRenamer {
 protected:
     // destructor is purposedly not virtual so we avoid code overhead from
diff --git a/libnetutils/ifc_utils.c b/libnetutils/ifc_utils.c
index d9c50ab..2394f9d 100644
--- a/libnetutils/ifc_utils.c
+++ b/libnetutils/ifc_utils.c
@@ -704,3 +704,19 @@ ifc_configure(const char *ifname,
 
     return 0;
 }
+
+// Required for Broadcom RILD
+int ifc_set_mtu(const char *name, int mtuSz)
+{
+    struct ifreq ifr;
+    int ret;
+    ifc_init_ifr(name, &ifr);
+    ifr.ifr_mtu = mtuSz;
+
+    ret = ioctl(ifc_ctl_sock, SIOCSIFMTU, &ifr);
+    if (ret < 0) {
+        printerr("ifc_set_mtu: SIOCSIFMTU failed: %d\n", ret);
+    }
+
+    return ret;
+}
diff --git a/libutils/RefBase.cpp b/libutils/RefBase.cpp
index 02907ad..c16a2d9 100644
--- a/libutils/RefBase.cpp
+++ b/libutils/RefBase.cpp
@@ -630,6 +630,13 @@ void RefBase::onLastWeakRef(const void* /*id*/)
 
 // ---------------------------------------------------------------------------
 
+/* START JB MR1 COMPAT */
+extern "C" void _ZN7android7RefBase14moveReferencesEPvPKvjRKNS_22ReferenceConverterBaseE(
+        void* /*dst*/, void const* /*src*/, size_t /*n*/, const ReferenceConverterBase& /*caster*/)
+{
+}
+/* END JB MR1 COMPAT */
+
 #if DEBUG_REFS
 void RefBase::renameRefs(size_t n, const ReferenceRenamer& renamer) {
     for (size_t i=0 ; i<n ; i++) {
